<?php
/**
 * Created by PhpStorm.
 * User: bobchu
 * Date: 15/11/9
 * Time: 下午1:29
 */

namespace Admin\Controller;

use Think\Db;
use \Common\Libs\Database;
use \Common\Libs\GoodsCategory;
use Think\Model;

class GoodsController extends AdminCoreController
{
    protected $status_name_words = array('下架', '上架');
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
    }

    /**
     * 商品列表
     */
    public function index(){
        if(IS_POST){
            $post_data=I('post.');
            $post_data['first'] = $post_data['rows'] * ($post_data['page'] - 1);
            $map = array();
            $map = $this->_search();
            $total = M('goods')->where($map)->count();
            if($total==0){
                $_list='';
            }else{
                $_list = M('goods')->where($map)->order($post_data['sort'].' '.$post_data['order'])->limit($post_data['first'].','.$post_data['rows'])->select();
            }

            foreach($_list as $list_key=>$list_one){
                $_list [$list_key]["cname"] = M('goods_category')->where(array('id'=>$list_one['cid']))->getField('name');
                $_list [$list_key]["ctime"]=date("Y年m月d日 H:i:s",$_list[$list_key]["ctime"]);
                $_list [$list_key]["utime"]=date("Y年m月d日 H:i:s",$_list[$list_key]["utime"]);
                $_list [$list_key]['status_name'] = $this->status_name_words[$list_one['status']];
                $operate_menu='';
                if(Is_Auth('Admin/Goods/edit')){
                    $operate_menu = $operate_menu."<a href='#' onclick=\"Submit_Form('Goods_Form','Goods_Data_List','" . U ( 'edit', array ('id' => $_list [$list_key] ['id'] ) ) . "','','编辑商品','');\">编辑</a>";
                }
                if(Is_Auth('Admin/Goods/del')){
                    $operate_menu = $operate_menu."<a href='#' onclick=\"Data_Remove('" . U ( 'del', array ('id' => $_list [$list_key] ['id'] ) ) . "','Goods_Data_List');\">删除</a>";
                }
                $_list [$list_key] ['operate'] = $operate_menu;
            }
            $data = array('total'=>$total, 'rows'=>$_list);
            $this->ajaxReturn($data);
        }else{
            /* 查询已有分类 */
            $GC = new GoodsCategory();
            $category_list = $GC->getList();
            $this->assign('category_list', $category_list);
            $this->display();
        }
    }

    /**
     * 搜索
     **/
    protected function _search() {
        $map = array ();
        $post_data=I('post.');

        if($post_data['s_name']!=''){
            $map['name']=array('like', '%'.$post_data['s_name'].'%');
        }

        if($post_data['s_cid']!=''){
            $map['cid'] = $post_data['s_cid'];
        }

        /* 名称：状态 字段：status 类型：select*/
        if($post_data['s_status']!=''){
            $map['status']=$post_data['s_status'];
        }
        return $map;
    }

    /**
     * 添加商品
     */
    public function add(){
        if(IS_POST){
            if(empty($_POST['name'])){
                $this->error('商品名称不能为空!');
            }
            $data = $_POST;
            if(!is_numeric($data['price'])){
                $this->error('商品价格必须为数字!');
            }
            if($data['price'] <= 0){
                $this->error('商品价格必须大于0!');
            }
            if($data['cid'] <= 0){
                $this->error('请选择合适的商品分类!');
            }
            $data['original_price'] = $data['price'];
            $data['ctime'] = time();
            $data['utime'] = $data['ctime'];
            $goods_id = M('goods')->data($data)->add();
            if($goods_id){
                $this->success('商品添加成功!');
            }else{
                $this->error('商品添加失败!');
            }
        }else{
            /* 查询已有分类 */
            $GC = new GoodsCategory();
            $category_list = $GC->getList();
            $this->assign('category_list', $category_list);
            $this->display();
        }
    }

    /**
     * 编辑商品
     */
    public function edit(){
        if(IS_POST){
            $data = $_POST;
            $data['utime'] = time();
            M('goods')->data($data)->where(array('id'=>$_GET['id']))->save();
            $this->success('商品更新成功!');
        }else{
            $info = M('goods')->where(array('id'=>$_GET['id']))->find();
            $info['url'] = 'http://'.$_SERVER['SERVER_NAME'].'/Uploads/'.$info['pic'];
            /* 查询已有分类 */
            $GC = new GoodsCategory();
            $category_list = $GC->getList();
            $this->assign('category_list', $category_list);
            $this->assign('info', $info);
            $this->display();
        }
    }

    /**
     * 删除商品
     */
    public function del(){

        $id=I('get.id');
        empty($id)&&$this->error('参数不能为空！');
        $res=M('goods')->delete($id);
        if(!$res){
            $this->error('删除失败！');
        }else{
            action_log('Del_Goods', 'Goods', $id);
            $this->success('删除成功！');
        }
    }

    /**
     * 菜品分类列表
     */
    public function category()
    {
        if(IS_POST){
            $list = M('goods_category')->order('list_order ASC')->select();
            if(count($list) > 0){
                foreach($list as $k=>$v){
                    $list[$k]['operate'] = "<a href='#' onclick=\"Submit_Form('Category_Form','Category_Data_List','" . U ( 'Goods/editCategory', array ('id' => $v['id'] ) ) . "','','编辑数据','');\">编辑</a>";
                    $list[$k]['operate'] = $list[$k]['operate']."<a href='#' onclick=\"Data_Remove('" . U ( 'Goods/delCategory', array ('id' => $v['id'] ) ) . "','Category_Data_List');\">删除</a>";
                }
            }
            $data = list_to_tree ( $list, 'id', 'pid', 'children' );

            $this->ajaxReturn($data);
        }else{
            $this->display();
        }
    }

    /**
     * 增加菜品分类
     */
    public function addCategory()
    {
        if(IS_POST){
            $post_data = I('post.');
            if(empty($post_data['name'])){
                $this->error('分类名称不得为空！');
            }
            $data = $post_data;
            if(M('goods_category')->data($data)->add()){
                $this->success('商品分类添加成功！');
            }else{
                $this->error('商品分类添加失败！');
            }
        }else{
            /* 查询已有分类 */
            $GC = new GoodsCategory();
            $category_list = $GC->getList();
            $this->assign('category_list', $category_list);
            $this->display();
        }
    }

    /**
     * 编辑商品分类
     */
    public function editCategory(){
        if(IS_POST){
            M('goods_category')->data($_POST)->where(array('id'=>$_GET['id']))->save();
            $this->success('更新成功!');
        }else{
            /* 查询已有分类 */
            $GC = new GoodsCategory();
            $category_list = $GC->getList();
            $this->assign('category_list', $category_list);
            $info = M('goods_category')->where(array('id'=>$_GET['id']))->find();
            $this->assign('info', $info);
            $this->display();
        }
    }

    /**
     * 删除商品分类
     */
    public function delCategory(){
        if(M('goods_category')->where(array('pid'=>$_GET['id']))->find()){
            $this->error('改分类下面还有二级分类,如需删除,请先清空该分类下面的所有二级分类!');
        }else {
            if (M('goods')->where(array('cid' => $_GET['id']))->find()) {
                $this->error('改分类下面还有商品,如需删除,请先清空该分类下面的所有商品!');
            } else {
                if (M('goods_category')->where(array('id' => $_GET['id']))->delete()) {
                    $this->success('删除成功!');
                } else {
                    $this->error('删除失败!');
                }
            }
        }

    }

    /**
     * 处理文件上传
     */
    public function upload(){
        $upload = new \Think\Upload();// 实例化上传类
        $upload->maxSize   =     3145728 ;// 设置附件上传大小
        $upload->exts      =     array('jpg', 'gif', 'png', 'jpeg');// 设置附件上传类型
        $upload->rootPath  =     './Uploads/'; // 设置附件上传根目录
        $upload->savePath  =     ''; // 设置附件上传（子）目录
        // 上传文件
        $info   =   $upload->uploadOne($_FILES['mypic']);
        $info['url'] = 'http://'.$_SERVER['SERVER_NAME'].'/Uploads/'.$info['savepath'].$info['savename'];
        if(!$info) {// 上传错误提示错误信息
            $this->error($upload->getError());
        }else{// 上传成功
            $this->ajaxReturn($info);
        }
    }
}